# This is our docker-compose file for STEDI
#everything works and is ready for the final

version: '3.7'

 

services:

# This is the server that holds the data.
  redis:

    image: redis:6.0.6

    ports: 

    - "6379:6379"

# stedi service
  stedi:
    
    image: scmurdock/stedi

    ports:
    
    - "4567:4567"

    environment:

      REDIS_HOST: "redis"

      REDIS_PORT: "6379"

      REDIS_DB: "0"

      KAFKA_BROKER: "kafka:19092"

      KAFKA_RISK_TOPIC: "customer-risk-topic"

# zookeeper service has to be before kafka
  zookeeper:

   image: confluentinc/cp-zookeeper:5.2.2
    
   ports:
    
   - "2181:2181"
    
   environment:
    
    ZOOKEEPER_CLIENT_PORT: "2181"

# kafka service is dependent on zookeeper so zookeeper has to be done first
  kafka:

    image: confluentinc/cp-kafka:5.2.2

    ports:

    - "9092:9092"

    environment:

      KAFKA_BROKER_ID: 0

      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"

      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092"

      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"

      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"

      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"

    depends_on:

    - "zookeeper"


    